service: flickrgroupaddr-api-aws-us-east-2

frameworkVersion: '3'

configValidationMode: error


provider:
  name: aws
  runtime: python3.8
  region: us-east-2

  # Note, we did testing for mem: https://docs.google.com/spreadsheets/d/1QjMKvrFh_-B4ROGMZFGfRTCLOvASis9w0LmgCRx_DOE
  memorySize: 256       

  # RDS is private inside the VPC, so we need to put the Lambdas that talk to it inside that same place
  vpc:
    securityGroupIds:
      - sg-02b9233a738009aad
    subnetIds:
      - subnet-077282b17b490bf96 
      - subnet-0cc3044b10111fd42

  environment:
    PGSQL_DB_INFO_SSM_PATH: "/flickrgroupaddr/resources/pgsql/creds"
    SNS_TOPIC_ARN: !Ref fgaAttemptAddTopic
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "ssm:GetParameter"
            - "ssm:GetParameters"
            - "ssm:PutParameter"
          Resource: "arn:aws:ssm:us-east-2:293119271420:parameter/flickrgroupaddr/*"

        - Effect: "Allow"
          Action:
            - "SNS:Publish"
          Resource: !Ref fgaAttemptAddTopic
        - Effect: "Allow"
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:Query" 
          Resource: "arn:aws:dynamodb:us-east-2:293119271420:table/flickrgroupaddr"

  httpApi:
    cors: 
      allowedOrigins:
        - "https://flickrgroupaddr.com"
    authorizers:
      fgaJwtAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: https://cognito-idp.us-east-2.amazonaws.com/us-east-2_A4sKVVFEx
        audience:
           - 54om78s59usqmo8nqdr7m7bktg


functions:
  api-new-request:
    handler: fga_rest_api_handler.create_new_fga_request
    events:
      - httpApi:
          path: /api/v001/fga_request
          method: post

  flickr-attempt-add:
    handler: flickr-proxy.attempt_flickr_group_add
    vpc: ~              # Tilde means null -- this function cannot be in the VPC, it needs to talk to flickr
    environment:
      SQS_QUEUE_URL: ${construct:add-attempt-queue.queueUrl}
    events:
      - sns:
          arn: !Ref fgaAttemptAddTopic
          topicName: AttemptFlickrGroupAdd
  api-get-flickr-id:
    handler: fga_rest_api_handler.get_flickr_id
    vpc: ~
    events:
      - httpApi:
          path: /api/v001/flickr_id
          method: get
          authorizer:
            name: fgaJwtAuthorizer

  api-put-flickr-id:
    handler: fga_rest_api_handler.put_flickr_id
    vpc: ~
    events:
      - httpApi:
          path: /api/v001/flickr_id
          method: put
          authorizer:
            name: fgaJwtAuthorizer

  oauth-callback:
    handler: cognito-oauth-callback.cognito_oauth_callback_webui_dev
    vpc: ~
    events:
      - httpApi:
          path: /oauth/callback
          method: get

  user-perms-callback:
    handler: fga_rest_api_handler.user_permission_granted_callback
    vpc: ~
    events:
      - httpApi:
          path: /api/v001/flickr/user-permission-granted-callback
          method: get

resources: 
  Resources:
    fgaAttemptAddTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: AttemptFlickrGroupAdd    
    # Should have made DynamoDB a resource?

constructs:
  add-attempt-queue:
    type: queue
    fifo: true
    maxRetries: 1
    worker:
      handler: db-updater.update_group_add_attempt
      
	
plugins:
  - serverless-python-requirements
  - serverless-lift

custom:
  pythonRequirements:
    dockerizePip: true
