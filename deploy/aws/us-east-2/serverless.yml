service: flickrgroupaddr-api-aws-us-east-2

frameworkVersion: '3'

configValidationMode: error


provider:
  name: aws
  runtime: python3.8
  region: us-east-2

  # Note, we did testing for mem: https://docs.google.com/spreadsheets/d/1QjMKvrFh_-B4ROGMZFGfRTCLOvASis9w0LmgCRx_DOE
  memorySize: 256       

  environment:
    PGSQL_DB_INFO_SSM_PATH: "/flickrgroupaddr/resources/pgsql/creds"
    SNS_TOPIC_ARN: !Ref fgaAttemptAddTopic
  iam:
    role:
      statements:

        # Need to be able to read and write to Param Store -- store per-user Flickr OAuth token in Param Store
        - Effect: "Allow"
          Action:
            - "ssm:GetParameter"
            - "ssm:GetParameters"
            - "ssm:PutParameter"
          Resource: "arn:aws:ssm:us-east-2:293119271420:parameter/flickrgroupaddr/*"

        - Effect: "Allow"
          Action:
            - "SNS:Publish"
          Resource: !Ref fgaAttemptAddTopic

        - Effect: "Allow"
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:Query" 
          Resource: "arn:aws:dynamodb:us-east-2:293119271420:table/flickrgroupaddr"

  httpApi:
    cors: 
      allowedOrigins:
        - "https://flickrgroupaddr.com"
    authorizers:
      fgaJwtAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: https://cognito-idp.us-east-2.amazonaws.com/us-east-2_A4sKVVFEx
        audience:
           - 54om78s59usqmo8nqdr7m7bktg


functions:
  api-new-request:
    handler: fga_rest_api_handler.create_new_fga_request
    events:
      - httpApi:
          path: /api/v001/fga_request
          method: post

  flickr-attempt-add:
    handler: flickr-proxy.attempt_flickr_group_add
    # Crankecd timeout to 120 seconds. This function can now receive batches of requests in the SNS messages, and it's single threaded. 
    timeout: 120
    events:
      - sns:
          arn: !Ref fgaAttemptAddTopic
          topicName: AttemptFlickrGroupAdd

  daily-retry:
    handler: daily-retry.daily_retry
    events:
      - schedule: cron(1 0 * * ? *)

  api-get-flickr-id:
    handler: fga_rest_api_handler.get_flickr_id
    events:
      - httpApi:
          path: /api/v001/flickr_id
          method: get
          authorizer:
            name: fgaJwtAuthorizer

  api-put-flickr-id:
    handler: fga_rest_api_handler.put_flickr_id
    events:
      - httpApi:
          path: /api/v001/flickr_id
          method: put
          authorizer:
            name: fgaJwtAuthorizer

  api-get-picture-info:
    handler: fga_rest_api_handler.get_flickr_picture_info
    events:
      - httpApi:
          path: /api/v001/flickr/picture
          method: get
          authorizer:
            name: fgaJwtAuthorizer

  api-update-picture:
    handler: fga_rest_api_handler.update_picture
    events:
      - httpApi:
          path: /api/v001/flickr/picture
          method: put
          authorizer:
            name: fgaJwtAuthorizer

 
  api-get-user-info:
    handler: fga_rest_api_handler.get_flickr_user_info
    events:
      - httpApi:
          path: /api/v001/flickr/user
          method: get
          authorizer:
            name: fgaJwtAuthorizer

  api-get-user-requests:
    handler: fga_rest_api_handler.get_user_outstanding_requests
    events:
      - httpApi:
          path: /api/v001/flickr/user/requests
          method: get
          authorizer:
            name: fgaJwtAuthorizer


  oauth-callback:
    handler: cognito-oauth-callback.cognito_oauth_callback_webui_dev
    events:
      - httpApi:
          path: /oauth/callback
          method: get

  user-perms-callback:
    handler: fga_rest_api_handler.user_permission_granted_callback
    events:
      - httpApi:
          path: /api/v001/flickr/user-permission-granted-callback
          method: get

resources:
  Resources:
    fgaAttemptAddTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: AttemptFlickrGroupAdd

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
